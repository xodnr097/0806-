<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 		column="prod_no" 			jdbcType="VARCHAR" />
		<result property="prodType" 	column="prod_type" 			jdbcType="VARCHAR" />
		<result property="prodName"		column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodDetail" 	column="prod_detail" 		jdbcType="LONGVARCHAR" />
		<result property="retailPrice" 	column="retail_price" 		jdbcType="INTEGER" />
		<result property="blindCode" 	column="blind_code" 		jdbcType="VARCHAR" />
		<result property="prodThumbnail" column="prod_thumbnail" 	jdbcType="VARCHAR" />
		<result property="coverFile" 	column="cover_file" 		jdbcType="VARCHAR" />
		<result property="purposeCode" 	column="purpose_code" 		jdbcType="VARCHAR" />
		<result property="manuFile"		column="manu_file"			jdbcType="VARCHAR" />
		<result property="regDate"		column="reg_date"			jdbcType="TIMESTAMP" />
		<result property="discountCode"	 column="discount_code"		jdbcType="VARCHAR" />
		<result property="bookPage"		 column="book_page"			jdbcType="INTEGER" />
		<result property="printPrice"	 column="print_price"		jdbcType="INTEGER" />
		<result property="creator"		 column="creator"			jdbcType="VARCHAR" />
		<result property="colorType"	 column="color_type"		jdbcType="VARCHAR" />
		<result property="sizeType"		 column="size_type"			jdbcType="VARCHAR" />
		<result property="coverType"	 column="cover_type"		jdbcType="VARCHAR" />
		<result property="innerType"	 column="inner_type"		jdbcType="VARCHAR" />
		<result property="bookCategory"	 column="book_category"		jdbcType="VARCHAR" />
		<result property="likeCount"	 column="like_count"		jdbcType="INTEGER" />
		<result property="wishNo"		 column="wish_no"			jdbcType="INTEGER" />
		<result property="cartNo"		 column="cart_no"			jdbcType="INTEGER" />
		<result property="buyAmount"	 column="buy_amount"		jdbcType="INTEGER" />
		<result property="buyNo" 	 	 column="buy_no" 			jdbcType="INTEGER" />
			
	</resultMap>
	
	<resultMap id="reviewSelectMap" type="review">
		<result property="reviewNo"		 column="review_no" 		jdbcType="INTEGER"/>
		<result property="userId"	   	 column="user_id" 			jdbcType="VARCHAR"/>
		<result property="buyNo"		 column="buy_no" 			jdbcType="INTEGER"/>
		<result property="reviewName"	 column="review_name" 		jdbcType="VARCHAR"/>
		<result property="reviewContent" column="review_content" 	jdbcType="LONGVARCHAR"/>
		<result property="reviewImage"	 column="review_image" 		jdbcType="VARCHAR"/>
		<result property="starRate"		 column="star_rate" 		jdbcType="INTEGER"/>
		<result property="regDate"		 column="reg_date" 			jdbcType="TIMESTAMP"/>
		<result property="prodNo"		 column="prod_no"			jdbcType="INTEGER"/>
	</resultMap>
			
	<!--  SQL : SELECT LIST -->
	<select id="getBookList" resultMap="productSelectMap">
			SELECT *
			FROM product
			WHERE (prod_type = 'paper' OR prod_type = 'ebook') 
			AND blind_code = 'show' 
			AND purpose_code='sale'
	
	</select>
	
	<select id="getBookListByCategory"	parameterType="string" resultMap="productSelectMap">
			SELECT * FROM product
			WHERE book_category = #{value}
			AND blind_code='show' 
			AND purpose_code='sale'
	
	</select>
	
	<select id="getBookListBySearch"	parameterType="search" resultMap="productSelectMap">
			SELECT * FROM(
							SELECT *	
							FROM product 
							WHERE (prod_type = 'paper' OR prod_type = 'ebook') 
							AND blind_code='show' 
							AND purpose_code='sale') pp
								<where>
										<if test="searchCondition == 'author'">
												author LIKE '%${searchKeyword}%'
										</if>
										
										<if test="searchCondition == 'prodName'">
												prod_name LIKE '%${searchKeyword}%'
										</if>
										
										<if test="searchCondition == 'hashtag'">
												hashtag LIKE '%${searchKeyword}%'
										</if>
								
								</where>
							
							
	
	</select>
	
	<select id="getProductList"	parameterType="hashMap" resultMap="productSelectMap">
			
			SELECT * 
			FROM product 
			WHERE prod_type = #{prodType}
			ORDER BY reg_date DESC
			LIMIT #{search.pageSize} OFFSET #{offset}
	</select>
	
	<select id="getProductTotalCount" parameterType="string" resultType="int">
			SELECT count(*) FROM(
				SELECT * FROM product
				WHERE blind_code='show' AND prod_type=#{value}
			)countable
	
	
	
	</select>
	
	<select id="getProduct"	parameterType="int" resultMap="productSelectMap">
			SELECT * FROM product
			WHERE prod_no = #{value}
	
	</select>
	
	
	<!--좋아요 기능-->
	
	<insert id="addWish" parameterType="hashMap">
					INSERT
					INTO
					wish(prod_no, user_id)
					VALUES (#{prodNo}, #{userId})
	</insert>
	
	<delete id="removeWish" parameterType="hashMap">
					DELETE
					FROM wish
					WHERE prod_no = #{prodNo} AND user_id = #{userId}
	
	</delete>
	
	<select id="getWishList" parameterType="string" resultMap="productSelectMap">
	
					SELECT p.prod_name, p.prod_type, p.retail_price 
					FROM product p 
					INNER JOIN wish w 
					ON p.prod_no = w.prod_no AND user_id= #{userId}
	
	</select>
	
	<select id="checkWish" parameterType="hashMap" resultMap="productSelectMap">
	
					SELECT wish_no
					FROM wish
					WHERE prod_no = #{prodNo} AND user_id = #{userId}
	
	</select>

	
	
	<!-- 장바구니 기능 -->
	
	<insert id="addCart"	parameterType="hashMap">
	
					INSERT
					INTO
					buy(prod_no, user_id, buy_amount, prod_type)
					VALUES (#{prodNo}, #{userId}, #{buyAmount}, #{prodType})
	</insert>
	
	<select id="checkCart"	parameterType="hashMap"	resultMap="productSelectMap">
					SELECT buy_amount
					FROM buy
					WHERE prod_no = #{prodNo} AND user_id = #{userId} AND buy_code = 'ready'
	
	</select>
	
	<update id="updateAmount" parameterType="hashMap">
					UPDATE buy
					SET buy_amount = #{updatedAmount}			
					WHERE prod_no = #{prodNo} AND user_id = #{userId} AND buy_code = 'ready'
	</update>
	
	<select id="getCartList"  parameterType="string" resultMap="productSelectMap">
					SELECT *
					FROM buy, product
					WHERE buy.user_id = #{value}
					AND buy.buy_code = 'ready'
					AND buy.prod_no = product.prod_no
	
	</select>
	
	<delete id="removeCart" parameterType="hashMap">
	
					DELETE
					FROM buy
					WHERE prod_no = #{prodNo} AND user_id = #{userId} AND buy_code = 'ready'
	
	
	
	</delete>
	
	<!-- 리뷰 기능 -->
	<select id="getProdNo"	parameterType="hashMap" resultMap="productSelectMap">
					SELECT prod_no
					FROM buy
					WHERE buy_no = #{buyNo}
	
	</select>
	
	
	<insert id="addReview"	parameterType="hashMap">
					INSERT
					INTO
					review(user_id, buy_no,  review_content, star_rate, prod_no)
					VALUES (#{userId}, #{buyNo}, #{reviewContent}, #{starRate}, #{prodNo})
	</insert>
	
	<update id="addReviewImage" parameterType="hashMap">
					UPDATE review
					SET review_image = #{reviewImage}			
					WHERE buy_no = #{buyNo}
	</update>
	
	<select id="getReview"	parameterType="int"	resultMap="reviewSelectMap">
					SELECT *
					FROM review
					WHERE prod_no = #{prodNo}
	
	</select>
	 
</mapper>


	