<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BuyMapper">
 	
 	
	<resultMap id="buySelectMapper" type="buy">
		<result property="buyNo" column="buy_no" jdbcType="INTEGER"/>
		<result property="buyAmount" column="buy_amount" jdbcType="INTEGER"/>
		<result property="buyerId" column="user_id" jdbcType="VARCHAR"/>		
		<result property="buyStatus" column="buy_code" jdbcType="VARCHAR"/>
		<result property="prodNo" column ="prod_no" jdbcType="INTEGER"/>
		<result property="payNo" column="pay_no" jdbcType="VARCHAR"/>
		<result property="prodType" column="prod_type" jdbcType="VARCHAR"/>
	</resultMap>
	
	
	<resultMap id="paySelectMapper" type="pay">
		<result property="payNo" column="pay_no" jdbcType="VARCHAR"/>
		<result property="deliveryRequest" column="delivery_req" jdbcType="VARCHAR"/>
		<result property="paymentOption" column="payment_type" jdbcType="VARCHAR"/>
		<result property="deliveryStatus" column="delivery_code" jdbcType="SMALLINT"/>
		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
		<result property="receiverAddr" column="receiver_addr" jdbcType="VARCHAR"/>
		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
		<result property="actualPrice" column="actual_price" jdbcType="INTEGER"/>
		<result property="cancelReason" column="cancel_type" jdbcType="VARCHAR"/>
		<result property="payStatus" column="pay_code" jdbcType="VARCHAR"/>
		<result property="payDate" column="pay_date" jdbcType="DATE"/>
		<result property="buyerId" column="user_id" jdbcType="VARCHAR"/>
		
	</resultMap> 
	

	<insert id="addBuy" parameterType="pay">
		INSERT 
		INTO pay (pay_no,
				  user_id,
				  payment_type,
				  actual_price,
				  receiver_name,
				  receiver_addr,
				  receiver_phone,
				  delivery_req,
				  pay_date,
				  delivery_code,
				  pay_code,
				  cancel_type )
		VALUES(
			   #{payNo},
			   #{buyerId},
			   #{paymentOption},
			   #{actualPrice},
			   #{receiverName},
			   #{receiverAddr},
			   #{receiverPhone},
			   #{deliveryRequest},
			   CURRENT_TIMESTAMP,
			   1,
			   #{payStatus},
			   #{cancelReason}
				)
	</insert>
	

	<select id ="getUserBuy" parameterType="String" resultMap="buySelectMapper">
	SELECT 
			DISTINCT
			buy.prod_no,
			buy.pay_no,
			buy.prod_type
			FROM pay , buy
		WHERE pay.pay_no=#{payNo}
			AND pay.pay_no = buy.pay_no
			AND buy.user_id = pay.user_id
			AND buy.buy_code='paid'
			AND pay.user_id= #{userId}
	</select>	
	
	<select id="getUserBuyList" parameterType="String" resultMap="paySelectMapper">
		SELECT pay_no,
			   payment_type,
			   pay_code,
			   receiver_name,
			   receiver_addr,
			   receiver_phone,
			   actual_price,
			   delivery_req,
			   delivery_code,
			   pay_date
			  
			   FROM pay
		WHERE user_id = #{value}
		AND pay_code = 'paid'
				
	</select>
	<select id="getProdNo" parameterType="int" resultType="int">
		SELECT prod_no 
		FROM buy 
		WHERE buy_no= ${value}
	</select>
	
	<update id="updateDeliveryStatus" parameterType="Map">
		UPDATE pay
		 SET delivery_code=#{deliveryStatus}
		 WHERE pay_no=#{payNo}
	</update>
	
	<update id="updateBuyStatus" parameterType="Map">
		UPDATE buy
		 SET buy_code ='paid', pay_no=#{payNo}
		 WHERE buy_no= ${buyNo}
	</update>
	
	<select id="getAllBuy" parameterType="string" resultMap="paySelectMapper">
		SELECT * from pay 
		WHERE pay_no = #{value}
	</select>
	<select id="getBuyAmount" parameterType="int" resultType="int">
		SELECT buy_amount 
		FROM buy 
		WHERE buy_no = ${value}
	</select>
<!-- 	<select id="getUserProdNo" parameterType="Map" resultType="String"> -->
<!-- 	SELECT buy.prod_no  -->
<!-- 	 FROM buy ,pay  -->
<!-- 	 WHERE buy_code = 1  -->
<!-- 	 AND pay.pay_no = buy.pay_no  -->
<!-- 	 AND buy.user_id=#{userId} -->
<!-- 	 AND pay.pay_no=#{payNo} -->
<!-- 	 AND pay_code= '1'  -->
<!-- 	</select> -->
	
	

	
<!-- 	<select id="getFactoryProdNo" parameterType="String" resultType ="String"> -->
<!-- 		SELECT  -->
<!-- 		DISTINCT -->
<!-- 		buy.prod_no -->
		
		
<!-- 		FROM pay  , buy -->
<!-- 		WHERE pay.pay_no=#{payNo} -->
<!-- 		AND pay.pay_no = buy.pay_no -->
<!-- 		AND buy.user_id = pay.user_id -->
<!-- 		AND buy.buy_code=1 -->
		
<!-- 	</select> -->
	
	<select id="getFactoryBuyList" parameterType="String" resultMap="paySelectMapper">
	SELECT 
			pay.pay_no ,
			receiver_addr,
			receiver_phone,
			delivery_code,
			pay_date,
			pay.user_id
			
		FROM pay,buy
		WHERE  buy.buy_code= 'paid'
		 AND pay.pay_no = buy.pay_no
		 AND buy.prod_type ='paper'
		 GROUP BY pay.pay_no
	</select>
	
	<select id="getFactoryBuy" parameterType="String" resultMap="buySelectMapper">
		SELECT 
		DISTINCT
		buy.prod_no, 
		buy.pay_no
		
		FROM pay  , buy
		WHERE pay.pay_no=#{payNo}
		AND pay.pay_no = buy.pay_no
		AND buy.user_id = pay.user_id
		AND buy.buy_code='paid'
		AND buy.prod_type="paper" 
			 
	</select>
	 
	 
</mapper>